version: "3.9"

services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    environment:
      # Enable KRaft mode (no Zookeeper)
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9094

      # Listeners: internal broker + host listener + controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:9093,CONTROLLER://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

      # Convenience and stability
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      # Optional: default partitions if topics auto-create (uncomment to use)
      # - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_HEAP_OPTS=-Xms256m -Xmx512m
    ports:
      - "9092:9092"   # internal (containers): use kafka:9092
      - "9093:9093"   # host-facing: use localhost:9093
    healthcheck:
      test: ["CMD", "sh", "-c", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --list >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 15
    restart: unless-stopped
    networks: [nrg-net]
    volumes:
      - kafka-data:/bitnami/kafka

  room-simulator:
    image: nrgchamp/room-simulator:dev
    build: ./room_simulator
    container_name: room-simulator
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BROKERS=kafka:9092
      - TOPIC_PREFIX=device.readings
      - SIM_PROPERTIES=/app/sim.properties
    volumes:
      - ./room_simulator/sim.properties:/app/sim.properties:ro
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks: [nrg-net]

  aggregator:
    build:
      context: ./aggregator
    image: nrg-champ/aggregator:dev
    environment:
      - AGG_LISTEN_ADDR=:8080
      - AGG_PROPERTIES=/app/aggregator.properties
      - AGG_DATA_DIR=/app/data
    volumes:
      - ./deploy/config/aggregator.properties:/app/aggregator.properties:ro
      - agg-data:/app/data
    ports:
      - "8081:8080"
    depends_on:
      - kafka
    networks: [ nrg-net ]

  aggregator-forwarder:
    image: edenhill/kcat:1.7.1
    depends_on:
      - kafka
      - aggregator
    command: >
      sh -lc '
      echo "Reading from Kafka and posting to Aggregator..." ;
      kcat -b kafka:9092 -t device.readings -C -u -q -K: |
      while IFS= read -r line; do
        if [ -n "$line" ]; then
          echo "$line" | curl -sS -X POST -H "Content-Type: application/x-ndjson" --data-binary @- http://aggregator:8080/ingest ;
        fi ;
      done'
    networks: [ nrg-net ]
  mape-full:
    build:
      context: ./mape/full
    image: nrg-champ/mape-full:local
    container_name: mape-full
    environment:
      - ENV=dev
      - LISTEN_ADDR=:8090
      - KAFKA_BROKERS=kafka:9092
      - TOPIC_PREFIX=device.readings
      - COMMAND_TOPIC_PREFIX=device.commands
      - CONSUMER_GROUP=mape-full
      - CONTROL_INTERVAL=5s
      - DEADBAND_C=0.4
      - KP=12
      - MAX_FAN_PCT=100
      - TARGETS_FILE=/app/config/targets.properties
      - TARGETS_RELOAD_EVERY=15s
      - DEFAULT_TARGET_C=22.0
      - EXECUTE_MODE=http
      - ROOM_HTTP_BASE=http://room-simulator:8080
      - LOG_LEVEL=INFO
      - LOG_FILE=/var/log/mape/mape.log
    volumes:
      - ./mape/full/config:/app/config:ro
    ports:
      - "8090:8090"
    depends_on:
      - kafka
    restart: unless-stopped

  ledger:
    build: .
    container_name: nrg-ledger
    ports:
      - "8083:8083"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    command: [ "-addr", ":8083", "-data", "/app/data", "-logs", "/app/logs" ]
    restart: unless-stopped

  assessment:
    build:
      context: ..
      dockerfile: Dockerfile
    image: nrgchamp/assessment:local
    environment:
      - LEDGER_BASE_URL=http://ledger:8084
      - TARGET_TEMP_C=22
      - COMFORT_TOLERANCE_C=0.5
      - CACHE_TTL=30s
      - ASSESSMENT_LOGFILE=/var/log/assessment/assessment.log
      - ASSESSMENT_BIND_ADDR=:8085
    ports:
      - "8085:8085"
    depends_on:
      - ledger
    volumes:
      - assessment_logs:/var/log/assessment

  gamification:
    build: ./gamification
    container_name: gamification
    environment:
      - LEDGER_BASE_URL=http://ledger:8084
      - DATA_DIR=/data
      - LOG_LEVEL=INFO
      - ZONE_ID_DELIM=:
    volumes:
      - ./data/gamification:/data
    ports:
      - "8086:8086"
    depends_on:
      - ledger

networks:
  nrg-net: {}

volumes:
  kafka-data: {}
  agg-data: {}
